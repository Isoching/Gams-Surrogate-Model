*For HDMR testing
option optcr=1e-4;
option optca=1e-4;
OPTION ITERLIM = 1e8;
OPTION ResLim = 1e8;
option threads=8;

set
i 2 input     /i1*i2/
*The Highest order
k adjust parameter /k1*k14/
j 1 output    /j1/;

alias (i,ip);   alias (k,kp);

Scalar c /0.95714/ ;

parameters minx(i)
/i1 -3, i2  -3/;
parameters maxx(i)
/i1 3,  i2  3/;

Table a(i,k)    coefficient
            k1                     k2                  k3                   k4                    k5                  k6                    k7                   k8                    k9                   k10                  k11                   k12                  k13                   k14
i1     -3.454752337          -0.007375241          11.2316425          -0.58957419          -7.448270957          0.374556483          2.222087467          -0.107704353          -0.342928416          0.016254985          0.026672111          -0.001245519          -0.000826719          3.81866E-05
i2     -3.47319578            1.356855755          7.785087284         -1.182855455         -1.935101824          0.440914317         -0.166522026          -0.099601554           0.110078035          0.013795598         -0.013372008          -0.00105156            0.000525471          3.32583E-05
;

Table  b(i,ip,k,kp)  coefficient
                       k1                   k2                    k3                  k4                     k5                   k6                    k7                  k8                    k9                   k10                 k11                    k12                  k13                    k14
i1.i2.k1          4.316506137          -0.612740817          -1.233046261          0.61395651          -0.231351131           0.098965946          0.153953883         -0.120850402          -0.026686815          0.029125489          0.00197744           -0.002942128          -5.3165E-05            0.000109701
i1.i2.k2          0.960847875          -0.601179939          -5.990640808          0.846233964          1.045579233          -0.491895736          0.471096655          0.147899366          -0.169040197         -0.023869378          0.019057773           0.001947803          -0.000737681          -6.27905E-05
i1.i2.k3         -4.093022216          -7.730188135           0.776968946          3.91415776           0.623145405          -1.739842775         -0.296059121          0.518949064           0.051257219         -0.088244555         -0.003993276           0.007673735           0.000116222          -0.000264374
i1.i2.k4          1.001666122           0.501731623           1.088695755         -0.69928957           0.744248114           0.407381276         -0.685492549         -0.115655295           0.168537799          0.017364271         -0.017292428          -0.001316882           0.000648321           3.93917E-05
i1.i2.k5          1.874468676           6.15923676           -0.354379798         -3.299614766         -0.325182788           1.385674711          0.155922605         -0.391069933          -0.027265119          0.064438498          0.002126745          -0.005509117          -6.12994E-05           0.000187962
i1.i2.k6         -0.801451872          -0.395206885           0.525802861          0.429924148         -0.858697252          -0.20823974           0.437368855          0.050689895          -0.093711213         -0.006625917          0.009131877           0.000440581          -0.000334765          -1.14755E-05
i1.i2.k7         -0.510199184          -1.965554272           0.154195912          1.081597973          0.047635881          -0.453990836         -0.0298892            0.127722893           0.005372101         -0.021036086         -0.000404909           0.001800302           1.06648E-05          -6.15128E-05
i1.i2.k8          0.24918317            0.140054838          -0.292713452         -0.13321335           0.311601859           0.05586105          -0.137189577         -0.011683967           0.027797386          0.001284242         -0.002640534          -6.88137E-05           9.5558E-05            1.29365E-06
i1.i2.k9          0.0817573             0.313944291          -0.038328065         -0.175490566          0.003178655           0.074247841          0.001225648         -0.021041679          -0.00026508           0.003488613          1.50617E-05          -0.000300194          -5.38266E-08           1.03019E-05
i1.i2.k10        -0.039345977          -0.023900401           0.056538423          0.020774911         -0.053775427          -0.007703693          0.022324424          0.001354811          -0.004402577         -0.000111474          0.000412495           2.96972E-06          -1.4815E-05            5.56913E-08
i1.i2.k11        -0.006969419          -0.024900363           0.004415296          0.014036765         -0.001214394          -0.005987348          0.000212039          0.001713189          -3.05158E-05         -0.000286468          3.12891E-06           2.48173E-05          -1.40009E-07          -8.56154E-07
i1.i2.k12         0.003108932           0.001959486          -0.004957426         -0.001579174          0.004494646           0.000516388         -0.001811135         -7.06624E-05           0.000351818          2.30946E-06         -3.26953E-05           3.14172E-07           1.16875E-06          -2.21884E-08
i1.i2.k13         0.000240781           0.000780492          -0.000186299         -0.000441228          7.00953E-05           0.000189406         -1.68148E-05         -5.47269E-05           2.64377E-06          9.23371E-06         -2.39274E-07          -8.05668E-07           9.09108E-09           2.79488E-08
i1.i2.k14        -9.74307E-05          -6.22667E-05           0.00016552           4.67803E-05         -0.000146328          -1.32718E-05          5.79463E-05          1.14192E-06          -1.11517E-05          1.13628E-07          1.03097E-06          -2.52935E-08          -3.67412E-08           1.19059E-09
;

variables
xo(i)   original input x
x(i)    x after scaling to [-1 1]
obj     to find the global minimum
yt(j)   prediction y
;
xo.up(i) = 3; xo.lo(i) = -3;
*yt.lo(j) = -1e6;
equations
eq1(i)
eq2
eq6
;
*eq1(i).. x(i) =e= ((xo(i)-minx(i))*2 / (maxx(i)-minx(i))) - 1 ;
eq1(i).. x(i) =e= xo(i) ;
eq2..  yt('j1') =e= c + sum((i,k),a(i,k)*power(x(i),ord(k)))
                       +sum((i,ip,k,kp)$(ord(i)<ord(ip)),b(i,ip,k,kp)*power(x(i),ord(k))*power(x(ip),ord(kp)));

eq6..    obj =e= yt('j1') ;
*xo.fx('i1') = 0.228; xo.fx('i2') = -1.626;
*OPTION NLP = BARON;
OPTION NLP = Antigone;
*OPTION LP = BARON;
model case1 /all/;
solve case1 using nlp min obj;
display obj.l, x.l, xo.l;
